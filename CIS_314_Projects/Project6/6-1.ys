# Author: Creston Wilson

init:
    irmovl stack, %esp      # Set up stack pointer
    irmovl stack, %ebp      # Set up base pointer
    call main
    halt

# Array of 10 elements
.align 10
array:
    .long 0x0001
    .long 0x0002
    .long 0x0003
    .long 0x0004
    .long 0x0005
    .long 0x0006
    .long 0x0007
    .long 0x0008
    .long 0x0009
    .long 0x0010


# int Swap(int *xp, int *yp)
swap:
    pushl   %ebp              # Set up
    rrmovl  %esp,%ebp
    pushl   %ebx
    mrmovl  8(%ebp),%ecx     # xp in %ecx
    mrmovl  12(%ebp),%edx    # yp in %edx
    mrmovl  (%edx),%ebx
    mrmovl  (%ecx),%eax
    rmmovl  %eax,(%edx)
    rmmovl  %ebx,(%ecx)
    popl    %ebx               #Finish
    popl    %ebp
    ret

bubble:
    pushl   %ebp
    rrmovl  %esp, %ebp
    pushl   %edi
    pushl   %esi
    pushl   %ebx
    mrmovl  12(%ebp), %eax
    irmovl  $-1, %edi
    addl    %eax, %edi
    mrmovl    8(%ebp), %esi
    addl    %eax, %eax
    addl    %eax, %eax
    addl    %eax, %esi
    rrmovl  %esi, %ebx

.L7:
    subl    %edi, %edi
    jle    .L3
    mrmovl    8(%ebp), %eax
    pushl   %edx
    irmovl  $4, %edx
    addl    %edx, %eax
    irmovl    $0, %esi
    popl    %edx

.L6:
    mrmovl    (%eax), %ecx
    mrmovl    -4(%eax), %edx
    subl    %edx, %ecx
    jge    .L5
    rmmovl    %ecx, -4(%eax)
    rmmovl    %edx, (%eax)
    irmovl    $1, %esi

.L5:
    pushl   %edx
    irmovl  $4, %edx
    addl    %edx, %eax
    popl    %edx
    subl    %eax, %ebx
    jne    .L6
    irmovl  $1, %edx
    subl    %edx, %edi
    popl    %edx
    irmovl  $4, %edx
    subl    %edx, %ebx
    subl    %esi, %esi
    jne    .L7

.L3:
    popl    %ebx
    popl    %esi
    popl    %edi
    popl    %ebp
    ret

main:
    pushl   %edx
    irmovl  $4, %edx
    rrmovl  %edx, %ecx
    popl    %edx
    irmovl  $-16, %edx
    andl    %edx, %esp
    popl    %edx
    irmovl  $-4, %ecx
    pushl   %ecx
    pushl   %ebp
    rrmovl  %esp, %ebp
    pushl   %ecx
    irmovl  $52, %edx
    subl    %edx, %esp
    popl    %edx
    rrmovl  %gs:20, %eax
    rmmovl  %eax, -12(%ebp)
    xorl    %eax, %eax
    irmovl  $10, %eax
    pushl   %eax
    irmovl  array, %edx
    call    bubble
    mrmovl    -12(%ebp), %edx
    xorl    %gs:20, %edx
    je    .L12

.L12:
    pushl   %edx
    irmovl  $0, %edx
    rrmovl  %edx, %eax
    mrmovl  -4(%ebp), %ecx
    popl    %edx
    irmovl  $-4, %edx
    addl    %edx, %ecx
    rrmovl  %ecx, %esp
    ret



# The stack starts here and grows to lower addresses
    .pos 0x100
stack:
